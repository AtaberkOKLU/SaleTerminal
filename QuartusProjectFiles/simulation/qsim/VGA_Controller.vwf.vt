// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/20/2021 19:18:48"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          VGA_Controller
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module VGA_Controller_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK_50;
reg [11:0] HighlightedProductList;
reg RESET_N;
reg SW2;
// wires                                               
wire [7:0] VGA_B;
wire VGA_BLANK_N;
wire VGA_CLK;
wire [7:0] VGA_G;
wire VGA_HS;
wire [7:0] VGA_R;
wire VGA_SYNC_N;
wire VGA_VS;

// assign statements (if any)                          
VGA_Controller i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.HighlightedProductList(HighlightedProductList),
	.RESET_N(RESET_N),
	.SW2(SW2),
	.VGA_B(VGA_B),
	.VGA_BLANK_N(VGA_BLANK_N),
	.VGA_CLK(VGA_CLK),
	.VGA_G(VGA_G),
	.VGA_HS(VGA_HS),
	.VGA_R(VGA_R),
	.VGA_SYNC_N(VGA_SYNC_N),
	.VGA_VS(VGA_VS)
);
initial 
begin 
#30000000 $finish;
end 

// CLOCK_50
always
begin
	CLOCK_50 = 1'b0;
	CLOCK_50 = #10000 1'b1;
	#10000;
end 
// HighlightedProductList[ 11 ]
initial
begin
	HighlightedProductList[11] = 1'b0;
end 
// HighlightedProductList[ 10 ]
initial
begin
	HighlightedProductList[10] = 1'b0;
end 
// HighlightedProductList[ 9 ]
initial
begin
	HighlightedProductList[9] = 1'b0;
end 
// HighlightedProductList[ 8 ]
initial
begin
	HighlightedProductList[8] = 1'b0;
end 
// HighlightedProductList[ 7 ]
initial
begin
	HighlightedProductList[7] = 1'b0;
end 
// HighlightedProductList[ 6 ]
initial
begin
	HighlightedProductList[6] = 1'b0;
end 
// HighlightedProductList[ 5 ]
initial
begin
	HighlightedProductList[5] = 1'b0;
end 
// HighlightedProductList[ 4 ]
initial
begin
	HighlightedProductList[4] = 1'b0;
end 
// HighlightedProductList[ 3 ]
initial
begin
	HighlightedProductList[3] = 1'b0;
end 
// HighlightedProductList[ 2 ]
initial
begin
	HighlightedProductList[2] = 1'b0;
end 
// HighlightedProductList[ 1 ]
initial
begin
	HighlightedProductList[1] = 1'b0;
end 
// HighlightedProductList[ 0 ]
initial
begin
	HighlightedProductList[0] = 1'b0;
end 

// RESET_N
initial
begin
	RESET_N = 1'b1;
end 

// SW2
initial
begin
	SW2 = 1'b0;
end 
endmodule

